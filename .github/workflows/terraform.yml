name: 'Terraform'

on:
  push:
    branches:
    - "main"

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_fingerprint : ${{ secrets.TF_VAR_fingerprint }}
      TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_tenancy_ocid }}
      TF_VAR_user_ocid: ${{ secrets.TF_VAR_user_ocid }}
      TF_VAR_private_key: ${{ secrets.TF_VAR_private_key }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}

    - name: Terraform Init
      run: terraform init -upgrade
  
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

    - name: Get Instance IP
      id: get_ip
      run: echo "instance_ip=$(terraform output -raw instance_ip)" >> "$GITHUB_OUTPUT"

    outputs:
      instance_ip: ${{ steps.get_ip.outputs.instance_ip }}

  ansible:
    name: 'Ansible'
    runs-on: ubuntu-latest
    needs: terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Ansible
      run: sudo apt-get update && sudo apt-get install -y ansible openssh-client

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.vm_private_key }}

    - name: Create Ansible Inventory
      run: |
        echo "[instance]" > inventory.ini
        echo "${{needs.terraform.outputs.instance_ip}} ansible_user=opc ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini

    - name: Run Ansible Playbook
      run: ansible-playbook -i inventory.ini ansible/playbook.yml