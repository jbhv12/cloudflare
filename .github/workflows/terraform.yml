name: 'Terraform'

on:
  push:
    branches:
    - "main"

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./infra

    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_fingerprint : ${{ secrets.TF_VAR_fingerprint }}
      TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_tenancy_ocid }}
      TF_VAR_user_ocid: ${{ secrets.TF_VAR_user_ocid }}
      TF_VAR_private_key: ${{ secrets.TF_VAR_private_key }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}

    - name: Terraform Init
      run: terraform init -upgrade
  
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

    - name: Get Instance IP
      id: get_ip
      run: echo "instance_ip=$(terraform output -raw instance_ip)" >> "$GITHUB_OUTPUT"

    outputs:
      instance_ip: ${{ steps.get_ip.outputs.instance_ip }}

  ansible:
    name: Ansible
    runs-on: ubuntu-latest
    needs: terraform
    # Prebuilt image with Ansible + common plugins
    container: ghcr.io/ansible/creator-ee:latest

    steps:
      - uses: actions/checkout@v4

      # Write SSH key from base64 secret (no newline headaches)
      - name: Write SSH key
        env:
          SSH_KEY_B64: ${{ secrets.VM_PRIVATE_KEY_B64 }}
        run: |
          install -m 700 -d ~/.ssh
          echo "$SSH_KEY_B64" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ needs.terraform.outputs.instance_ip }} >> ~/.ssh/known_hosts

      - name: Create Ansible inventory
        run: |
          {
            echo "[instance]"
            echo "${{ needs.terraform.outputs.instance_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa"
          } > inventory.ini

      - name: Run Ansible playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
        run: ansible-playbook -i inventory.ini ansible/docker_setup.yml