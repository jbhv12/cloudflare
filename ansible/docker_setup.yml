---
- hosts: all
  become: yes
  vars:
    manager_host: "{{ groups['big'][0] }}"

  pre_tasks:
    - name: Remove any old docker.list before apt cache runs
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent

  tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist

    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Docker GPG key (keyring file)
      ansible.builtin.shell: |
        set -eu
        install -m 0755 -d /usr/share/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
          | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        chmod 0644 /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker repository (idempotent)
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        filename: docker
        state: present

    - name: Update apt cache after adding Docker repo
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker Engine and CLI
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Enable and start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Verify Docker installation
      ansible.builtin.command: docker --version
      register: docker_version
      changed_when: false

    - ansible.builtin.debug:
        var: docker_version.stdout

    - name: Start Tailscale container
      community.docker.docker_container:
        name: tailscaled
        image: tailscale/tailscale
        state: started
        restart_policy: always
        network_mode: host
        volumes:
          - /var/lib:/var/lib
          - /dev/net/tun:/dev/net/tun
        capabilities:
          - net_admin
          - sys_module
        env:
          TS_AUTHKEY: "{{ tailscale_auth_key }}"

    - name: Wait for Tailscale to be ready
      ansible.builtin.pause:
        seconds: 10

    - name: Get Tailscale IP address
      ansible.builtin.command: docker exec tailscaled tailscale ip -4
      register: tailscale_ip_output
      changed_when: false

    - name: Display Tailscale IP address
      ansible.builtin.debug:
        var: tailscale_ip_output.stdout