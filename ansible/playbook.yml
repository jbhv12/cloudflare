- hosts: all
  become: yes
  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    # Map Ansible arch -> Debian arch for Docker repo
    - name: Set Docker repo architecture
      set_fact:
        docker_repo_arch: >-
          {{ 'amd64' if ansible_architecture in ['x86_64'] else
             'arm64' if ansible_architecture in ['aarch64','arm64'] else
             'armhf' if ansible_architecture in ['armv7l'] else
             ansible_architecture }}

    - name: Add Docker GPG key (keyring)
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
        | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    # Clean up the previously written malformed file
    - name: Remove malformed docker.list if present
      file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent

    - name: Add Docker apt repository (properly templated)
      apt_repository:
        filename: docker
        repo: >-
          deb [arch={{ docker_repo_arch }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
          https://download.docker.com/linux/{{ ansible_distribution | lower }}
          {{ ansible_distribution_release }} stable
        state: present
        update_cache: yes

    - name: Install Docker Engine and CLI
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Enable and start Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - debug:
        var: docker_version.stdout

    - name: Copy docker-compose.yml to target
      copy:
        src: ../compose/docker-compose.yml
        dest: /home/{{ ansible_user }}/docker-compose.yml
        mode: '0644'

    - name: Run docker compose up
      shell: docker compose -f /home/{{ ansible_user }}/docker-compose.yml up -d
      args:
        chdir: /home/{{ ansible_user }}
