- hosts: big
  become: yes

  tasks:
    - name: Copy apps directory to target
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/../apps/"
        dest: "/home/{{ ansible_user }}/apps/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: preserve
    
    - name: Run Docker Compose
      ansible.builtin.shell: docker compose up -d
      args:
        chdir: "/home/{{ ansible_user }}/apps/npm"

    - name: Wait for API to be ready
      ansible.builtin.wait_for:
        host: localhost
        port: 81
        delay: 5
        timeout: 60

    - name: Create API token
      ansible.builtin.uri:
        url: "http://localhost:81/api/tokens"
        method: POST
        body_format: json
        body:
          identity: "admin@example.com"
          secret: "changeme"
          scope: "user"
        headers:
          Content-Type: "application/json"
        return_content: yes
        status_code: 200
      register: token_response

    - name: Extract token from response
      set_fact:
        api_token: "{{ (token_response.content | from_json).token }}"

    - name: Display the token
      debug:
        var: api_token

    - name: Create proxy host
      ansible.builtin.uri:
        url: "http://localhost:81/api/nginx/proxy-hosts"
        method: POST
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ api_token }}"
        body_format: json
        body:
          domain_names:
            - "example.yourdomain.com"
          forward_scheme: "http"
          forward_host: "127.0.0.1"
          forward_port: 8080
          access_list_id: 0
          certificate_id: 0
          ssl_forced: false
          caching_enabled: false
          block_exploits: true
          allow_websocket_upgrade: true
          http2_support: true
          hsts_enabled: false
          hsts_subdomains: false
          enabled: true
          advanced_config: ""
          meta: {}
        status_code: [200, 201]